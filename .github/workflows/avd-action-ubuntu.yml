name: AVD Action ubuntu

on:
    push:
      branches:
        - develop
    pull_request:
      branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: ~/Android/Sdk
      ANDROID_SDK_ROOT: ~/Android/Sdk
      ANDROID_AVD_HOME: /home/runner/.config/.android/avd/
      #QT_DEBUG_PLUGINS: 1

    steps:  
    - name: Update packages
      run: sudo apt-get update

    - name: Set user as sudo
      run: sudo usermod -aG sudo $USER


    - name: List home directory
      run: cd && ls

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Install KVM on Linux
      run: |
        sudo apt-get install cpu-checker
        sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils

    - name: Set chmod kvm
      run: |      
       sudo chmod o+rw /dev/kvm

    - name: Check CPU for Virtualization Support
      run: |
        egrep -c '(vmx|svm)' /proc/cpuinfo
        sudo kvm-ok      

    - name: Curl cmdline-tools from Android.tar.gz
      run: cd && curl -O -L https://github.com/fahleiro/actions/releases/download/android/Android.tar.gz
      
    - name: Descomprimir Android.tar.gz
      run: tar -xzf ~/Android.tar.gz -C ~ && echo "Descompressão de Android concluída."

    - name: Install Android dependencies
      run: |
        chmod +x ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager
        yes | ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "platform-tools"
        ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "emulator"
        ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "build-tools;30.0.3"
        ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-27"
        ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-30;default;x86_64"
        
    #- name: Install lib dependencies
      #run: |
        #sudo apt-get install libpulse0
        #sudo apt-get install libqt5gui5
        #sudo apt-get install libx11-xcb1
        #sudo apt update -q
        #sudo apt install -y -q build-essential libgl1-mesa-dev
        #sudo apt install -y -q libxkbcommon-x11-0
        #sudo apt install -y -q libxcb-image0
        #sudo apt install -y -q libxcb-keysyms1
        #sudo apt install -y -q libxcb-render-util0
        #sudo apt install -y -q libxcb-xinerama0
        #sudo apt install -y -q libxcb-icccm4
        #sudo apt-get install libxcb-cursor0

    #- name: chmod to xcb
      #run: |
        #sudo chmod +x ~/Android/Sdk/emulator/lib64/qt/plugins/platforms/libqxcb.so
        #sudo chmod +x /usr/lib/x86_64-linux-gnu/qt5/plugins/platforms/libqxcb.so
        

    - name: Create Android Virtual Device (AVD)
      run: |
        chmod +x ~/Android/Sdk/cmdline-tools/latest/bin/avdmanager
        ~/Android/Sdk/cmdline-tools/latest/bin/avdmanager create avd -n device-name -k "system-images;android-30;default;x86_64" -d pixel_4
   
    - name: Validate user permissions
      run: |
        groups $USER
        cat /etc/group | grep kvm
        ls -l /dev/kvm
        cat /lib/udev/rules.d/50-udev-default.rules | grep kvm

    #- name: Set up virtual display (Xvfb)
    #  run: sudo apt-get install -y xvfb
    #- name: Start Xvfb
    #  run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

    #- name: Export DISPLAY
    #  run: export DISPLAY=:99
    
    - name: Run Android Virtual Device (AVD)
      run: |
        chmod +x ~/Android/Sdk/emulator/emulator
        chmod +x ~/Android/Sdk/emulator
        ~/Android/Sdk/emulator/emulator -avd device-name -port 5554 -no-window &

    - name: Validating AVD ready
      run: |
        chmod +x ~/Android/Sdk/platform-tools/adb      
        status=$(~/Android/Sdk/platform-tools/adb devices | grep -v "List of devices attached")
        while ! echo "$status" | grep -q "device"; do
          echo "Emulator is not ready, waiting..."
          sleep 5
          status=$(~/Android/Sdk/platform-tools/adb devices | grep -v "List of devices attached")
        done
        echo "Emulator is online!"
        echo "$status"

    - name: Install Node.js and npm
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Appium
      run: npm install -g appium

    - name: Install UiAutomator2
      run: appium driver install uiautomator2

  
